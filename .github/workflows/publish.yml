name: Release from Tag

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn

      - name: Setup NPM Auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Apply version bump with Changesets
        run: |
          VERSION=${{ steps.version.outputs.version }}
          echo "Applying version bump via Changesets: $VERSION"
          yarn set-version "$VERSION"

      - name: Preview version bumps
        run: git diff

      - name: Build all packages
        run: yarn build:all

      - name: Publish package
        run: |
          # Create publish directory outside workspace
          mkdir -p /tmp/publish-pkg
          
          # Copy built files and additional files
          cp -r packages/dist/* /tmp/publish-pkg/
          cp packages/README.md /tmp/publish-pkg/
          cp packages/LICENSE /tmp/publish-pkg/
          cp packages/package.json /tmp/publish-pkg/
          
          # Fix package.json files field to include all built files
          cd /tmp/publish-pkg
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.files = ['index.js', 'index.d.ts', 'index.d.ts.map', 'lib/', 'README.md', 'LICENSE', '!**/*.tsbuildinfo'];
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          
          # Publish the package
          npm publish --access public || echo "⚠️ Failed to publish (maybe already published)"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
